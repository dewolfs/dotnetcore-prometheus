# create a unique name based on your project requirements
name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

resources:
- repo: self

# global variables
variables:
  vmImageName: 'ubuntu-latest'
  azureSubscription: 'azure-conn'
  kubernetesAzureResourceGroup: '_rg-aks-d-we-001'
  kubernetesCluster: 'aks-d-we-001'
  
stages:
- stage: Release
  displayName: Release stage
  jobs:
    - deployment: DeployToAKS
      pool:
        vmImage: $(vmImageName)
      environment: prod
      strategy:
       runOnce:
         deploy:
           steps:
              - checkout: self
              - task: HelmInstaller@1
                displayName: Helm installer
                inputs: 
                  helmVersionToInstall: latest
              - task: Kubernetes@1
                displayName: Create Kubernetes monitoring NS
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'cluster-conn'
                  command: 'apply'
                  arguments: '-f manifests/monitoring-ns.yml'
              - script: |
                  helm repo add stable https://kubernetes-charts.storage.googleapis.com/
                  helm repo update
                displayName: 'Update Helm repo charts'
              - task: HelmDeploy@0
                displayName: 'Helm install Prometheus'
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscription: $(azureSubscription)
                  azureResourceGroup: $(kubernetesAzureResourceGroup)
                  kubernetesCluster: $(kubernetesCluster)
                  namespace: 'monitoring'
                  command: 'upgrade'
                  chartType: 'Name'
                  chartName: 'stable/prometheus'
                  releaseName: 'prometheus'
                  valueFile: 'monitoring/prometheus/values.yaml'